Structuring
به معنی ساده تر نویسی کد هاست که در پوشه های مختلف نوشته شود تا از شلوغ شدن و تار عنکبوتی شدن کد جلوگیری کند

برای اینکار اول یک پوشه به اسم روتس درست میکنیم و تمام درخواست هایی با ادرس مشابه مثلا تمام انها
api/array
باشد را در پوشه جدا می نویسیم یه نکته ای فقط وجود دارد اونم اینه که اگر ادرس های مختلف مثلا
api/qp
باید در فایل های جدا نوشته شود !!!

حالا برای اینکار اول یک فایل با اسم ادرس مثلا
array-routs
می سازیم و سپس اکسپرس رو ریکوئایر میکنیم
بعد ادرس انها که مثلا
api/array
رو پاک میکنیم که فقط یک "/" بماند
فقط یک نکته اسمش باید به جای اپ تغییر بدیم به روتس
app ---> router
و در اخر هم اکسپورت میکنیم و از این فایل تمام

داخل فایل اصلی باید باید اول فایل روتس رو ریکوئایر کنیم و بعد به وسیله یک میدلور کاستوم به شکل زیر هر دستوری که با ادرس مورد نظر ارسال شده را به سمت فایل روتس بفرستیم
const arrayRoute= require("./routes/array-routes");
app.use("/api/array" , arrayRoute);

کار اینجا تمام نمی شود چون فایل روتس الان خیلی شلوغ هستش الان باید یک پوشه به اسم کنترل درست میکنیم
و سپس تمام فانکشن هایی که در گت پست پوت و دیلیت هستش رو به اون اضافه میکنیم
داخل پوشه کنترل و سپس فایل کنترل تمام فانکشن ها را به فرمت اصلی فانکشن می سازیم و سپس اکسپورت میکنیم به شکل زیر
module.exports = {
    nameOfTheFunction1 ,
    nameOfTheFunction2 ,
    ...
}
و سپس داخل فایل روتس با ریکوئایر میکنیم فقط یک نکته برای برگشتن به دو پوشه قبل باید دو تا نقطه بزاری یعنی
const control = require("../controller/array-controller.js");
دو تا دات به جای یکی گذاشتم

بعد هم مثلا همینجا کنترل رو اول می نویسیم به جای اون فانکشن ها و بعد دات و سپس اسم فانکشن مثلا
router.get("/", control.getArray);

از این خلاصه تر هم می تونی فانکشن های تکراری داخل فایل کنترل رو هم بسازی و از اسم اون به جای تکرار کردن چند خط کد اضافه استفاده کنی
